//*数値から単位を取り除く--------------------------------

@function strip-unit($number) {
    @if type-of($number)=='number'and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}

//*px→rem変換(blockの時に使う)
@function rem($px, $base: 16px) {
    $value: $px;

    // 単位がpx以外の場合は警告を出してそのまま返す
    @if (unit($px) !='px') {
        @warn 'rem()の引数にpx以外の値を指定しても計算できません';
        @return $value;
    }

    $value: (strip-unit($px) / strip-unit($base)) * 1rem;

    @return $value;
}

//*px→em変換(elementの時に使う)

@function em($px, $base: 16px) {
    $value: $px;

    // 単位がpx以外の場合は警告を出してそのまま返す
    @if (unit($px) !='px') {
        @warn 'em()の引数にpx以外の値を指定しても計算できません';
        @return $value;
    }

    $value: (strip-unit($px) / strip-unit($base)) * 1em;

    @return $value;
}

//*px→vw変換(スマホ表示の時はvwをよく使う・デスクトップの場合デメリットが多いので基本使わない)
@function vw($px, $base: 375px) {
    $value: $px;

    // 単位がpx以外の場合は警告を出してそのまま返す
    @if (unit($px) !='px') {
        @warn 'vw()の引数にpx以外の値を指定しても計算できません';
        @return $value;
    }

    $value: (strip-unit($px) / strip-unit($base)) * 100vw;

    @return $value;
}


//*数値から単位を取り除く--------------------------------
@function strip-unit($number) {
    @if type-of($number)=='number'and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}
